<%= include header.ejs %>
    <%= include menu.ejs %>
    <div class="container">
        <div class="main-container">
            <div class="main clearfix">

                <article>
                    <h2>All Hosts</h2>
                    <button type="button" id="refresh-toggle" class="btn btn-labeled btn-success active pull-right" style="margin-top: -50px;">
                        <span class="btn-label"><i class="glyphicon glyphicon-refresh"></i></span>
                        <span class="btn-text">Refresh on</span>
                    </button>
                    <a href="/log/out" class="btn btn-default pull-right" id="all-logs" style="margin-left: 2em" title="View log for all processes (max <%= maxLogs %>)">
                        <i class="glyphicon glyphicon-tasks"></i>
                    </a>
                    <div class="input-group">
                        <label class="input-group-addon" for="filter-name" id="filter-label">Filter</label>
                        <input type="text" class="form-control" id="filter-name" placeholder="Name" aria-describedby="filter-label" />
                        <label class="input-group-addon" for="filter-state">State:</label>
                        <select class="form-control" id="filter-state">
                            <option></option>
                            <option>STOPPED</option>
                            <option>STARTING</option>
                            <option>RUNNING</option>
                            <option>BACKOFF</option>
                            <option>STOPPING</option>
                            <option>EXITED</option>
                            <option>FATAL</option>
                            <option>UNKNOWN</option>
                        </select>
                    </div>
                    <hr>
                    <div id="hosts-listing">
                    </div>
                </article>

            </div> <!-- #main -->
        </div> <!-- #main-container -->
    </div>
    <script type="text/javascript">
        var updateInterval;
        var hostTablesCollapse = [];
        var currentHostsState = {};
        <%
            var sessRole = '';
            if (typeof session.user != 'undefined'){
                sessRole = session.user.Role;
            }
        %>
        var uiRole = '<%= sessRole %>';

        function updateList() {
            $.ajax({
                url: '/ajax/supervisord',
                type: 'get',
                dataType: 'json',
                success: renderHosts
            });
        }
        function renderHosts(hosts) {
            if (typeof hosts === 'undefined') {
                hosts = currentHostsState;
            } else {
                currentHostsState = hosts;
            }
            $('#hosts-listing').html('');

            var keys = Object.keys(hosts), processIds = [];
            keys.sort();

            keys.forEach(function(key){
                if (!hostTablesCollapse[key]) {
                    hostTablesCollapse[key] = 'down';
                }

                if (hosts[key].data.code) {
                    $('#hosts-listing').append(new EJS({url: '/partials/hosts-listing.ejs'}).render({host: hosts[key].host, error: hosts[key].data.code, role: uiRole}));
                } else {
                    var processes = [],
                        filterName = $('#filter-name').val(),
                        filterNameCase = /[A-Z]/.test(filterName),
                        filterState = $('#filter-state').val();
                    hosts[key].data.forEach(function(p) {
                        if (filterName) {
                            // if there are upper case letters, perform case sensitive match
                            var processName = filterNameCase ? p.name : p.name.toLowerCase();
                            if (processName.indexOf(filterName) === -1) {
                                return;
                            }
                        }
                        if (filterState && filterState !== p.statename) {
                            return;
                        }
                        processes.push(p);
                        var processFullname = (p.group ? p.group + ':' : '') + p.name + '@' + key;
                        processIds.push(processFullname)
                    });
                    $('#hosts-listing').append(new EJS({url: '/partials/hosts-listing.ejs'}).render({host: hosts[key].host, processes: processes, hostCollapsed: hostTablesCollapse[key], role: uiRole, filterName: $('#filter-name').val(), filterState: $('#filter-state').val()}));
                }
            });
            if (processIds.length && processIds.length < 8 && $('.glyphicon-collapse-up').length === 0) {
                // if there are only a few processes just display them
                $('.table-collapse').each(function() {
                    var table = $(this).attr('data-table');
                    $(this).find('i').removeClass('glyphicon-collapse-down').addClass('glyphicon-collapse-up');
                    $("table[id='" + table + "']").toggle(true);
                    hostTablesCollapse[table] = 'up';
                });
            }
            if (processIds.length > <%= maxLogs %>) { // max number of processes to view log at once
                $('#all-logs').attr('disabled', 'disabled');
            } else {
                $('#all-logs').attr('disabled', null).attr('href', '/logs/out/0?' + $.param({ids: processIds}));
            }
        }

        $(document).ready(function(){
            $('#filter-name').focus().on('input', function() {
                var $this = $(this);
                var val = $this.val();
                setTimeout(function() {
                    val == $this.val() && renderHosts();
                }, 350); // don't filter on every keystroke
            });
            refreshOn();
            $('#filter-state').focus().on('change', function() {
                renderHosts();
            });

            $('#hosts-listing').on('click', '.super-action', function(){
                var action = $(this).attr('data-action');
                var process = $(this).attr('data-process');
                var host = $(this).attr('data-host');

                $.ajax({
                    url: '/ajax/supervisorctl',
                    type: 'get',
                    dataType: 'json',
                    data: ({host: host, action: action, process: process}),
                    success: function(data){
                        console.log(data);
                    }
                });
            }).on('click', '.process-info-btn', function(){
                $(this).parent().parent().find('.spawn-error-div').slideToggle();
                refreshOff();
            }).on('click', '.table-collapse', function(){
                var table = $(this).attr('data-table');
                if ($(this).find('i').hasClass('glyphicon-collapse-up')) {
                    $(this).find('i').removeClass('glyphicon-collapse-up').addClass('glyphicon-collapse-down');
                    $("table[id='" + table + "']").toggle(false);
                    hostTablesCollapse[table] = 'down';
                } else {
                    $(this).find('i').removeClass('glyphicon-collapse-down').addClass('glyphicon-collapse-up');
                    $("table[id='" + table + "']").toggle(true);
                    hostTablesCollapse[table] = 'up';
                }
            });

            function refreshOn() {
                updateList();
                updateInterval = setInterval(updateList, 5000);
                $('#refresh-toggle').addClass('active').removeClass('btn-danger').addClass('btn-success').find('.btn-text').text('Refresh on');
            }

            function refreshOff() {
                clearInterval(updateInterval);
                $('#refresh-toggle').removeClass('active').removeClass('btn-success').addClass('btn-danger').find('.btn-text').text('Refresh off');
            }

            $('#refresh-toggle').on('click', function(){
                if ($(this).hasClass('active')) {
                    refreshOff();
                } else {
                    refreshOn();
                }
            });
        });
    </script>
<%= include footer.ejs %>
